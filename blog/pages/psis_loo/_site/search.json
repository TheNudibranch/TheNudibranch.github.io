[
  {
    "objectID": "psis_loo.html",
    "href": "psis_loo.html",
    "title": "Importance Sampling and Projectile Motion",
    "section": "",
    "text": "Those pesky integrals\nLet’s start with a rough definition: importance sampling is a numerical integration technique that takes advantage of the convergence properties of well-behaved probability distributions. Consider the following integral:\n\\[\\int_a^b f(x)dx\\] Assume that \\(f\\) is\n\nknitr::opts_chunk$set(cache = F)\n\n\nprojectile &lt;- function(v0, theta, length.out=100){\n  theta &lt;- theta/180 * pi\n  v0x &lt;- v0 * cos(theta)\n  v0y &lt;- v0 * sin(theta)\n  t_end &lt;- 2*v0y/9.81\n  x &lt;- seq(0,t_end, length.out=length.out) |&gt; vapply(\\(t) t*v0x, numeric(1))\n  y &lt;- seq(0,t_end, length.out=length.out) |&gt; vapply(\\(t) t*v0y - 0.5*9.81*t^2, numeric(1))\n  cbind(x,y)\n}\n\nn_draws &lt;- 1e3\ndraws &lt;- lapply(1:n_draws, \\(a) {\n  cop &lt;- mvtnorm::rmvnorm(1, sigma=matrix(c(1,-0.6,-0.6,1), nrow=2))\n  v &lt;- qnorm(pnorm(cop[,1]), 20, 7)\n  theta &lt;- qbeta(pnorm(cop[,2]), 20,20) * 90\n  projectile(v, theta)\n})\n\nn_draw_plot &lt;- 100\nfor (i in 1:n_draw_plot){\n  if (i == 1){\n    plot(draws[[i]], \n         ylim=range(lapply(1:n_draw_plot, \\(i) draws[[i]][,2]) |&gt; unlist()),\n         xlim=range(lapply(1:n_draw_plot, \\(i) draws[[i]][,1]) |&gt; unlist()), type='l',\n         col=adjustcolor('darkblue', 0.2))\n  }\n  else{\n    lines(draws[[i]], col=adjustcolor('darkblue', 0.2))\n  }\n}\n\n\n\n\n\n\n\n# lapply(draws, \\(a) a[nrow(a),1]) |&gt; unlist() |&gt; hist()\n# \n# lapply(draws, \\(a) a[nrow(a),1]) |&gt; unlist() |&gt; cumsum() |&gt; \n#   (\\(.) . / (1:length(.)))() |&gt; plot(type='l')"
  },
  {
    "objectID": "importance_sampling.html",
    "href": "importance_sampling.html",
    "title": "Importance Sampling and Projectile Motion",
    "section": "",
    "text": "Those pesky integrals\nLet’s start with a rough definition: importance sampling is a numerical integration technique that takes advantage of the convergence properties of well-behaved probability distributions. Consider the following integral:\n\\[\\int_a^b f(x)dx\\] Assume that \\(f\\) is\n\nknitr::opts_chunk$set(cache = F)\n\n\nprojectile &lt;- function(v0, theta, length.out=100){\n  theta &lt;- theta/180 * pi\n  v0x &lt;- v0 * cos(theta)\n  v0y &lt;- v0 * sin(theta)\n  t_end &lt;- 2*v0y/9.81\n  x &lt;- seq(0,t_end, length.out=length.out) |&gt; vapply(\\(t) t*v0x, numeric(1))\n  y &lt;- seq(0,t_end, length.out=length.out) |&gt; vapply(\\(t) t*v0y - 0.5*9.81*t^2, numeric(1))\n  cbind(x,y)\n}\n\nn_draws &lt;- 1e3\ndraws &lt;- lapply(1:n_draws, \\(a) {\n  cop &lt;- mvtnorm::rmvnorm(1, sigma=matrix(c(1,-0.6,-0.6,1), nrow=2))\n  v &lt;- qnorm(pnorm(cop[,1]), 20, 7)\n  theta &lt;- qbeta(pnorm(cop[,2]), 20,20) * 90\n  projectile(v, theta)\n})\n\nn_draw_plot &lt;- 100\nfor (i in 1:n_draw_plot){\n  if (i == 1){\n    plot(draws[[i]], \n         ylim=range(lapply(1:n_draw_plot, \\(i) draws[[i]][,2]) |&gt; unlist()),\n         xlim=range(lapply(1:n_draw_plot, \\(i) draws[[i]][,1]) |&gt; unlist()), type='l',\n         col=adjustcolor('darkblue', 0.2))\n  }\n  else{\n    lines(draws[[i]], col=adjustcolor('darkblue', 0.2))\n  }\n}\n\n\n\n\n\n\n\n# lapply(draws, \\(a) a[nrow(a),1]) |&gt; unlist() |&gt; hist()\n# \n# lapply(draws, \\(a) a[nrow(a),1]) |&gt; unlist() |&gt; cumsum() |&gt; \n#   (\\(.) . / (1:length(.)))() |&gt; plot(type='l')"
  }
]